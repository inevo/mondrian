<!--
  == $Id$
  == This software is subject to the terms of the Common Public License
  == Agreement, available at the following URL:
  == http://www.opensource.org/licenses/cpl.html.
  == (C) Copyright 2001-2005 Kana Software, Inc. and others.
  == All Rights Reserved.
  == You must accept the terms of that agreement to use this software.
  -->
<project name="mondrian" default="compile">
  <property environment="env"/>
  <property name="project.location" location="."/>
  <property name="lib.location" location="${project.location}/lib"/>
  <property file="${project.location}/build.properties"/>
  <property file="${project.location}/mondrian.properties"/>
  <property name="project.build.debug" value="on"/>
  <property name="Name" value="Mondrian"/>
  <property name="name" value="mondrian"/>
  <property name="version" value="1.1.5"/>

  <!--
    ===================================================================
    Set the properties related to paths
    ===================================================================
  -->
  <property name="src.dir" value="src"/>
  <property name="testsrc.dir" value="testsrc"/>
  <property name="java.dir" value="${src.dir}/main"/>
  <property name="javatest.dir" value="${testsrc.dir}/main"/>
  <property name="etc.dir" value="${src.dir}/etc"/>
  <property name="lib.dir" value="lib"/>
  <property name="testlib.dir" value="testlib"/>
  <property name="doc.dir" value="doc"/>
  <property name="resource.location" location="resource"/>
  <property name="javadoc.dir" value="${doc.dir}/api"/>
  <property name="classes.dir" value="classes"/>
  <property name="testclasses.dir" value="testclasses"/>
  <property name="build.dir" value="build"/>
  <property name="dist.name" value="${name}-${version}"/>
  <property name="dist.base" value="distribution"/>
  <property name="dist.dir" value="dist"/>
  <property name="demo.dir" value="demo"/>
  <property name="webapp.dir" value="webapp"/>
  <property name="dist.src.file" value="${dist.dir}/${dist.name}-src.zip"/>
  <property name="dist.bin.file" value="${dist.dir}/${dist.name}.zip"/>
  <property name="dist.doc.file" value="${dist.dir}/doc.tar.gz"/>
  <property name="jar.file" value="${lib.dir}/${name}.jar"/>
  <property name="workbench.jar.file" value="workbench.jar"/>
  <property name="resource.jar.file" value="${lib.dir}/eigenbase-resgen.jar"/>
  <property name="xom.jar.file" value="${lib.dir}/eigenbase-xom.jar"/>
  <property name="war.file" value="${lib.dir}/${name}.war"/>
  <property name="jdk.home" value="${env.JAVA_HOME}"/>
  <property name="catalina.home" value="${env.CATALINA_HOME}"/>
  <property name="junit.home" value="${env.JUNIT_HOME}"/>
  <property name="mondrian.webapp.deploy" value="${env.JBOSS_HOME}/server/default/deploy"/>

  <property name="generated.java.files" value="
${java.dir}/mondrian/olap/Parser.java,
${java.dir}/mondrian/olap/ParserSym.java,
${java.dir}/mondrian/olap/MondrianDef.java,
${java.dir}/mondrian/olap/MondrianResource*.java,
${etc.dir}/mondrian/web/jsp/**/*.java"/>
  <property name="generated.lib.files" value="
${lib.dir}/mondrian.jar,
${lib.dir}/mondrian.war,
${lib.dir}/mondrian.xml,
${lib.dir}/web.xml,
${lib.dir}/index.jsp,
demo/FoodMartCreateData.sql"/>

  <path id="project.classpath">
    <pathelement location="${classes.dir}"/>
    <pathelement location="${lib.dir}/servlet.jar"/>
    <pathelement location="${lib.dir}/jsp-api.jar"/>
    <pathelement location="${lib.dir}/commons-dbcp.jar"/>
    <pathelement location="${lib.dir}/commons-collections.jar"/>
    <pathelement location="${lib.dir}/commons-pool.jar"/>
    <pathelement location="${lib.dir}/eigenbase-properties.jar"/>
    <pathelement location="${lib.dir}/eigenbase-resgen.jar"/>
    <pathelement location="${lib.dir}/eigenbase-xom.jar"/>
    <pathelement location="${lib.dir}/javacup.jar"/>
    <pathelement location="${lib.dir}/log4j-1.2.9.jar"/>
    <pathelement location="${lib.dir}/mof.jar"/>
    <pathelement location="${lib.dir}/jmi.jar"/>
    <pathelement location="${lib.dir}/xalan.jar"/>
    <pathelement location="${lib.dir}/xml-apis.jar"/>
    <pathelement location="${lib.dir}/xercesImpl.jar"/>
    <!-- CLASSPATH must contain xml-apis.jar, xercesImpl.jar, javacup.jar -->
    <pathelement path="${env.CLASSPATH}"/>
    <pathelement location="${ant.home}/lib/ant.jar"/>
    <pathelement location="${ant.home}/lib/optional.jar"/>
  </path>

  <path id="project.test.classpath">
    <path refid="project.classpath"/>
    <fileset dir="${testlib.dir}">
        <include name="**/*.jar"/>
    </fileset>
    <pathelement location="${testclasses.dir}"/>
    <pathelement location="${driver.classpath}"/>
  </path>

  <taskdef name="javacup" classname="java_cup.JavaCUPTask">
    <classpath refid="project.classpath"/>
  </taskdef>

  <taskdef name="xomgen" classname="org.eigenbase.xom.XOMGenTask">
    <classpath refid="project.classpath"/>
  </taskdef>

  <!--
    ===================================================================
    Properties for running the FoodMart test. (Override them by
    editing build.properties)
    ===================================================================
  -->

  <!-- Comma-separated list of jdbc drivers. Override in build.properties. -->
  <property name="mondrian.jdbcDrivers" value="sun.jdbc.odbc.JdbcOdbcDriver"/>

  <!-- Connect string to the database. Override in build.properties. -->
  <property name="mondrian.foodmart.jdbcURL" value="jdbc:odbc:MondrianFoodMart"/>

  <!-- Classpath for JDBC drivers. Override in your build.properties. -->
  <property name="driver.classpath" value=""/>

  <!-- URL of the catalog definition. -->
  <property name="mondrian.foodmart.catalogURL"
      value="file:${project.location}/${demo.dir}/FoodMart.xml"/>

  <target name="help">
      <echo>
      You must specify a specific project target when using the ANT build.
      Targets are one of the following:
      - all
          Cleans, compiles all classes, and runs a simple test.
      - compile
          Compiles functional classes only.
      - clean
          Deletes build output.
      - test
          Runs a simple test.
      - info
          shows configuration info
      </echo>
  </target>

  <target name="info">
  <echo>==============================================================</echo>
  <echo>| Mondrian configuration info                                |</echo>
  <echo>==============================================================</echo>
  <echo>project.location      = ${project.location}</echo>
  <echo>jdk.home              = ${env.JAVA_HOME}</echo>
  <echo>catalina.home         = ${env.CATALINA_HOME}</echo>
  <echo>junit.home            = ${env.JUNIT_HOME}</echo>
  <echo>mondrian.foodmart.catalogURL = ${mondrian.foodmart.catalogURL}</echo>
  <echo>mondrian.foodmart.jdbcURL    = ${mondrian.foodmart.jdbcURL}</echo>
  <echo>mondrian.jdbcDrivers         = ${mondrian.jdbcDrivers}</echo>
  <echo>==============================================================</echo>
  </target>

  <target name="all" depends="clean,compile,test"/>

  <target name="clean">
      <delete includeEmptyDirs="true" quiet="true">
          <fileset dir="${classes.dir}" includes="**/*.class,**/*.properties"/>
          <fileset dir="${testclasses.dir}" includes="**/*.class,**/*.properties"/>
          <fileset dir="." includes="${generated.java.files},${generated.lib.files}"/>
      </delete>
  </target>

  <target name="prepare">
    <mkdir dir="${classes.dir}"/>
    <mkdir dir="${testclasses.dir}"/>
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${testlib.dir}"/>
  </target>

  <target name="cmdrunner" depends="compile">
    <property name="crtmp.dir" location="${build.dir}/tmpcmdrunner"/>
    <mkdir dir="${crtmp.dir}"/>

    <unjar src="${lib.dir}/commons-dbcp.jar" dest="${crtmp.dir}"/>
    <unjar src="${lib.dir}/commons-collections.jar" dest="${crtmp.dir}"/>
    <unjar src="${lib.dir}/commons-pool.jar" dest="${crtmp.dir}"/>
    <unjar src="${lib.dir}/eigenbase-resgen.jar" dest="${crtmp.dir}"/>
    <unjar src="${lib.dir}/eigenbase-xom.jar" dest="${crtmp.dir}"/>
    <unjar src="${lib.dir}/javacup.jar" dest="${crtmp.dir}"/>
    <unjar src="${lib.dir}/log4j-1.2.9.jar" dest="${crtmp.dir}"/>
    <unjar src="${lib.dir}/mondrian.jar" dest="${crtmp.dir}"/>

    <unjar dest="${crtmp.dir}">
        <fileset dir="${testlib.dir}">
            <include name="**/*.jar"/>
            <exclude name="**/junit.zip"/>
        </fileset>
    </unjar>
  
    <copy file="./log4j.properties" todir="${crtmp.dir}"/>

    <jar destfile="${lib.dir}/cmdrunner.jar" >
      <fileset dir="${crtmp.dir}" >
        <include name="**/*.xml"/>
        <include name="**/*.class"/>
        <include name="**/*.properties"/>
      </fileset>

      <manifest>
        <attribute name="Main-Class" value="mondrian.tui.CmdRunner"/>
        <attribute name="Built-By" value="${user.name}"/>
<!--
        <attribute name="Class-Path" value="${jar.classpath}"/>
        <section name="${jar.package}">
          <attribute name="Specification-Title" value="${component.title}"/>
          <attribute name="Specification-Version" value="${component.version}"/>
          <attribute name="Specification-Vendor" value="${company.name}"/>
          <attribute name="Implementation-Title" value="${component.title}"/>
          <attribute name="Implementation-Version" value="${component.build}"/>
          <attribute name="Implementation-Vendor" value="${company.name}"/>
        </section>
-->
      </manifest>
    </jar>

    <delete dir="${crtmp.dir}" quiet="true"/>
  </target>

  <target name="compile" depends="
prepare,
parser,
generate.resources,
def,
compile.java,
unzip-FoodMartCreateData,
unzip-FoodMartAccessDB"/>

  <target name="generate.resources">
    <taskdef name="resgen" classname="org.eigenbase.resgen.ResourceGenTask">
      <classpath refid="project.classpath"/>
    </taskdef>

    <!-- Compile MondrianException first, so that resgen can use
         reflection on it. -->
    <javac
        srcdir="${java.dir}"
        destdir="${classes.dir}"
        debug="${project.build.debug}"
        classpathref="project.classpath"
        source="1.4">
      <include name="mondrian/olap/MondrianException.java" />
      <include name="mondrian/olap/ResultLimitExceeded.java" />
      <include name="mondrian/olap/InvalidHierarchy.java" />
    </javac>

    <resgen srcdir="${java.dir}" resdir="${classes.dir}" locales="en_US,de_DE">
      <include name="mondrian/olap/MondrianResource.xml"/>
    </resgen>

  </target>

  <target name="compile.java">
    <javac
        srcdir="${java.dir}"
        destdir="${classes.dir}"
        debug="${project.build.debug}"
        classpathref="project.classpath"
        source="1.4">
      <include name="mondrian/**/*.java"/>
      <include name="javax/**/*.java"/>
      <include name="org/**/*.java"/>
    </javac>
  </target>

  <target name="compile.tests" depends="info,compile.java">
    <javac
        srcdir="${javatest.dir}"
        destdir="${testclasses.dir}"
        debug="${project.build.debug}"
        classpathref="project.test.classpath"
        source="1.4">
        <include name="mondrian/**/*.java"/>
    </javac>
  </target>

  <target name="parser">
    <javacup
        srcdir="${java.dir}"
        input="${java.dir}/mondrian/olap/Parser.cup"
        interface="true"/>
  </target>

  <target name="def">
    <xomgen
        model="${java.dir}/mondrian/olap/Mondrian.xml"
        destdir="${java.dir}"
        classname="mondrian.olap.MondrianDef"
        dtdname="mondrian.dtd"/>
    <copy file="${java.dir}/mondrian/olap/mondrian.dtd"
        todir="${lib.dir}"/>

    <xomgen
        model="${java.dir}/mondrian/rolap/aggmatcher/DefaultRulesSchema.xml"
        destdir="${java.dir}"
        classname="mondrian.rolap.aggmatcher.DefaultDef"
        dtdname="aggregates.dtd"/>
    <copy file="${java.dir}/mondrian/rolap/aggmatcher/aggregates.dtd"
        todir="${lib.dir}"/>
  </target>

  <!-- Before you run it, you will need to set the
       "mondrian.jdbcDrivers", "mondrian.foodmart.jdbcURL", and
       "mondrian.foodmart.catalogURL" properties. The easiest way to
       do this is to edit the file "build.properties". -->

  <target name="set.connectString">
    <!-- Ensure that the JdbcUser parameter is only added to the connect string
         if the mondrian.foodmart.jdbcUser property is set. Likewise
         JdbcPassword. -->
    <condition property="jdbcUser"
        value=";JdbcUser='${mondrian.foodmart.jdbcUser}'">
      <isset property="mondrian.foodmart.jdbcUser"/>
    </condition>
    <condition property="jdbcUser" value="">
      <not>
        <isset property="mondrian.foodmart.jdbcUser"/>
      </not>
    </condition>
    <condition property="jdbcPassword"
        value=";JdbcPassword='${mondrian.foodmart.jdbcPassword}'">
      <isset property="mondrian.foodmart.jdbcPassword"/>
    </condition>
    <condition property="jdbcPassword" value="">
      <not>
        <isset property="mondrian.foodmart.jdbcPassword"/>
      </not>
    </condition>
    <property name="mondrian.test.connectString"
        value="Provider=mondrian;Jdbc='${mondrian.foodmart.jdbcURL}'${jdbcUser}${jdbcPassword};Catalog='${mondrian.foodmart.catalogURL}'"/>
  </target>

  <target name="FoodMartTest"
      description="Runs a few queries using the FoodMart schema."
      depends="set.connectString">
    <java classpathref="project.classpath" classname="mondrian.test.Main"
        fork="yes">

      <sysproperty key="mondrian.jdbcDrivers"
          value="${mondrian.jdbcDrivers}"/>
      <sysproperty key="mondrian.test.foodmart.catalogURL"
          value="${mondrian.foodmart.catalogURL}"/>

      <!-- mondrian.test.connectString is the mondrian connect-string.
           Provider must be 'mondrian'. -->
      <sysproperty key="mondrian.test.connectString"
          value="${mondrian.test.connectString}"/>

    </java>
  </target>

  <!-- Same prerequisites as FoodMartTest -->
  <target name="test" description="Runs all JUnit tests.">
    <antcall target="test-dbms"/>
  </target>

  <target name="test-dbms" depends="compile,compile.tests,set.connectString"
      description="
Runs all JUnit tests, using the given database connection
in {mondrian.foodmart.jdbcURL}.">
    <echo>Connecting to ${mondrian.foodmart.jdbcURL}</echo>
    <echo>Connect String: ${mondrian.test.connectString}</echo>
    <java classpathref="project.test.classpath" classname="mondrian.test.Main"
        fork="yes">

      <sysproperty key="log4j.configuration" 
          value="${log4j.configuration}"/>
      <sysproperty key="mondrian.jdbcDrivers"
          value="${mondrian.jdbcDrivers}"/>
      <sysproperty key="mondrian.foodmart.jdbcURL"
          value="${mondrian.foodmart.jdbcURL}"/>
      <sysproperty key="mondrian.test.foodmart.catalogURL"
          value="${mondrian.foodmart.catalogURL}"/>
      <sysproperty key="mondrian.test.connectString"
          value="${mondrian.test.connectString}"/>
      <!-- tests require en_US locale -->
      <sysproperty key="user.language" value="en"/>
      <sysproperty key="user.region" value="US"/>

    </java>
  </target>

  <target name="junit-main" depends="compile,compile.tests,set.connectString">
    <mkdir dir="junit-results"/>
    <junit printsummary="yes" fork="yes" haltonfailure="yes" haltonerror="yes">
        <classpath>
            <path refid="project.test.classpath"/>
        </classpath>

        <sysproperty key="log4j.configuration" 
            value="log4j.properties"/>
        <sysproperty key="mondrian.jdbcDrivers"
            value="${mondrian.jdbcDrivers}"/>
        <sysproperty key="mondrian.test.connectString"
            value="${mondrian.test.connectString}"/>
        <sysproperty key="mondrian.test.foodmart.catalogURL"
            value="${mondrian.foodmart.catalogURL}"/>

        <formatter type="xml" />

        <batchtest fork="yes" todir="junit-results">
            <fileset dir="${testclasses.dir}">
<!--
<include name="mondrian/test/**/BasicQueryTest.class" />
-->
              <include name="mondrian/test/**/*Test*.class" />
              <exclude name="mondrian/test/**/*Testable*.class" />
              <exclude name="mondrian/test/**/*TestContext*.class" />
              <exclude name="mondrian/test/**/TestCaseForker.class" />
              <exclude name="mondrian/test/**/FoodMartTestCase.class" />
              <exclude name="mondrian/test/**/*$*.class" />
            </fileset>
        </batchtest>
    </junit>

    <junitreport todir="junit-results">
      <fileset dir="junit-results">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="junit-results/html"/>
    </junitreport>

  </target>

  <target name="etags">
    <exec dir="${project.location}" executable="find" output="javaFiles">
      <arg line=". -name &quot;*.java&quot; -print"/>
    </exec>
    <exec dir="${project.location}" executable="ctags">
      <arg line="-e"/>
      <arg line="-L javaFiles"/>
    </exec>
    <delete file="${project.location}/javaFiles" quiet="true"/>
  </target>

  <target name="version">
    <echo message="Mondrian ${version}" file="VERSION.txt"/>
  </target>

  <target name="srczip" depends="version">
    <mkdir dir="${dist.dir}" />
    <delete file="${dist.src.file}"/>
    <zip
        zipfile="${dist.src.file}"
        update="true">
      <zipfileset
          dir="."
          prefix="${dist.name}"
          includes="
${java.dir}/**/*.properties,
${java.dir}/mondrian/olap/MondrianResource.xml,
${java.dir}/mondrian/olap/Mondrian.xml,
${java.dir}/javax/jmi/model/resources/mof.xml,
${java.dir}/**/*.java,
${java.dir}/**/*.cup,
${java.dir}/**/*.gif,
${java.dir}/**/*.html,
${lib.dir}/commons-collections.jar,
${lib.dir}/commons-dbcp.jar,
${lib.dir}/commons-pool.jar,
${lib.dir}/eigenbase-xom.jar,
${lib.dir}/eigenbase-resgen.jar,
${lib.dir}/javacup.jar,
${lib.dir}/jmi.jar,
${lib.dir}/log4j-1.2.9.jar,
${lib.dir}/jsp-api.jar,
${lib.dir}/mof.jar,
${lib.dir}/eigenbase-resgen.jar,
${lib.dir}/eigenbase-xom.jar,
${lib.dir}/servlet.jar,
${testsrc.dir}/queryFiles/**/*.xml,
${testsrc.dir}/**/*.java,
${testsrc.dir}/**/*.html,
${testsrc.dir}/**/*.txt,
${testlib.dir}/junit.jar,
${webapp.dir}/WEB-INF/web*.xml,
${webapp.dir}/**/*.jsp,
${webapp.dir}/WEB-INF/*.xsl,
${webapp.dir}/WEB-INF/*.tld,
doc/**/*.css,
doc/**/*.gif,
doc/**/*.jpeg,
doc/**/*.html,
misc/**/*.mf,
misc/Meta.xsl,
build.xml,
build.bat,
build.sh,
build.properties,
mondrian.properties,
LICENSE.html,
README.txt,
VERSION.txt,
${demo.dir}/FoodMart.xml"
          excludes="
${javadoc.dir}/**,
**/_vti*/*,
**/*~,
**/junit-results/**,
${generated.java.files},
doc/deployDoc.sh" />
    </zip>
  </target>

  <target name="check-FoodMartCreateData-uptodate">
    <condition property="FoodMartCreateData.uptodate">
      <or>
        <not>
          <available file="demo/FoodMartCreateData.zip"/>
        </not>
        <uptodate
            srcfile="demo/FoodMartCreateData.zip"
            targetfile="demo/FoodMartCreateData.sql"/>
      </or>
    </condition>
  </target>

  <target name="unzip-FoodMartCreateData"
      depends="check-FoodMartCreateData-uptodate"
      unless="FoodMartCreateData.uptodate">
    <unzip src="demo/FoodMartCreateData.zip" dest="demo">
      <patternset includes="FoodMartCreateData.sql"/>
    </unzip>
    <touch file="demo/FoodMartCreateData.sql"/>
  </target>

  <target name="check-FoodMartAccessDB-uptodate">
    <condition property="FoodMartAccessDB.uptodate">
      <or>
        <not>
          <available file="demo/access/MondrianFoodMart-Access.zip"/>
        </not>
        <uptodate
            srcfile="demo/access/MondrianFoodMart-Access.zip"
            targetfile="demo/access/MondrianFoodMart.mdb"/>
      </or>
    </condition>
  </target>

  <target name="unzip-FoodMartAccessDB"
      depends="check-FoodMartAccessDB-uptodate"
      unless="FoodMartAccessDB.uptodate">
    <unzip src="demo/access/MondrianFoodMart-Access.zip" dest="demo/access">
      <patternset includes="MondrianFoodMart.mdb"/>
    </unzip>
    <touch file="demo/access/MondrianFoodMart.mdb"/>
  </target>

  <target name="release" depends="binzip"/>

  <target name="binzip"
      depends="version,war,javadoc,srczip,unzip-FoodMartCreateData,unzip-FoodMartAccessDB">
    <mkdir dir="${dist.dir}" />
    <delete file="${dist.bin.file}"/>
    <zip zipfile="${dist.bin.file}">
      <zipfileset
          dir="."
          prefix="${dist.name}"
          includes="
${doc.dir}/**/*.jpg,
${doc.dir}/**/*.png,
${doc.dir}/**/*.html,
${doc.dir}/**/*.css,
${doc.dir}/api/**/*.xml,
${dist.src.file},
${war.file},
${jar.file},
lib/mondrian.dtd,
demo/FoodMart.xml,
demo/FoodMartCreateData.sql,
demo/access/MondrianFoodMart.mdb,
LICENSE.html,
README.txt,
VERSION.txt"
          excludes="
**/*~,
**/_vti*/*,
**/*.psp,
${doc.dir}/api/src-html/**/*"/>
    </zip>
  </target>

  <target
      name="doczip"
      depends="javadoc"
      description="Builds a zipfile of the documentation, which can then be
                   deployed to sf.net. See also doc/deployDoc.sh.">
    <mkdir dir="${dist.dir}" />
    <tar
        destfile="${dist.doc.file}"
        compression="gzip">
      <tarfileset
          dir="."
          includes="
doc/api/**/*,
doc/**/*.html,
doc/**/*.gif,
doc/**/*.jpg,
doc/**/*.png,
doc/**/*.css,
doc/**/*.xml"
          excludes="
**/*~,
**/_vti*/*,
**/*.psp,
**/*.sh"/>
    </tar>
  </target>

  <target name="jar" depends="compile,compile.tests">
    <mkdir dir="${lib.dir}" />
    <copy file="src/main/mondrian/rolap/aggmatcher/DefaultRules.xml" 
        todir="${classes.dir}"/>
    <zip
        zipfile="${jar.file}"
        update="true">
      <zipfileset
          dir="${classes.dir}"
          includes="
**/*.class,
**/*.properties,
**/*.xml"/>
      <zipfileset
          dir="${testclasses.dir}"
          includes="
mondrian/test/loader/**/*.class"/>
      <zipfileset
          dir="."
          includes="
LICENSE.html,
README.txt,
VERSION.txt"/>
    </zip>
  </target>

  <target name="javadoc">
    <mkdir dir="${javadoc.dir}" />
    <delete quiet="true" file="${javadoc.dir}/index.html"/>
    <javadoc sourcepath="${java.dir}:${javatest.dir}"
        classpathref="project.test.classpath"
        destdir="${javadoc.dir}"
        packagenames="mondrian.*,javax.*,org.omg.*"
        overview="${java.dir}/overview.html"
        footer="&lt;a href=&quot;http://sourceforge.net/projects/mondrian&quot;&gt;&lt;img src=&quot;http://sourceforge.net/sflogo.php?group_id=35302&#38;type=1&quot; width=&quot;88&quot; height=&quot;31&quot; border=&quot;0&quot; alt=&quot;SourceForge.net_Logo&quot;&gt;&lt;/a&gt;"
        author="true"
        source="1.4"
        access="package"
        additionalparam="-linksource">
      <tag name="pre" description="Pre-condition:"
           scope="constructors,methods"/>
      <tag name="post" description="Post-condition:"
           scope="constructors,methods"/>
      <tag name="testcase" description="Test-case:"
           scope="constructors,methods,types"/>
<!--
      <link href="http://javadoc.dyndns.org/joogle/api"/>
 -->
      <link href="http://java.sun.com/j2se/1.4/docs/api/"/>
      <link href="http://www.junit.org/junit/javadoc/3.8/"/>
      <link href="http://java.sun.com/products/servlet/2.2/javadoc/"/>
      <link href="http://eigenbase.sourceforge.net/resgen/api/"/>
      <link href="http://farrago.sourceforge.net/api/"/>
    </javadoc>
    <copy file="${java.dir}/mondrian/olap/Mondrian.xml"
        todir="${javadoc.dir}/mondrian/olap"/>
  </target>

  <target name="upload-javadoc" depends="javadoc" description="
Copies javadoc to sourceforge, where it will be accessible via
http://mondrian.sourceforge.net/api/index.html.
You should set scp.user, scp.password and scp.path in build.properties">
    <exec executable="scp">
      <arg line="-r"/>
      <arg line="${javadoc.dir}"/>
      <arg line="${scp.user}:${scp.path}"/>
    </exec>
  </target>

    <target name="copy-jars">
      <copy todir="${lib.dir}">
        <fileset dir="${ant.home}/lib" includes="ant.jar,optional.jar"/>
        <fileset dir="${catalina.home}/common/lib" includes="jsp-api.jar"/>
      </copy>
      <copy todir="${lib.dir}">
        <fileset dir="${catalina.home}/common/lib" includes="servlet*.jar"/>
        <mapper type="merge" to="servlet.jar"/>
      </copy>
      <copy todir="${lib.dir}">
        <fileset dir="${catalina.home}/common/lib" includes="commons-*.jar" excludes="commons-el*.jar"/>
        <mapper type="regexp" from="(^.+)-([.0-9]+\.jar$)" to="\1.jar" /> <!-- strip version -->
      </copy>
      <copy todir="${testlib.dir}">
        <fileset dir="${junit.home}" includes="junit.jar"/>
       </copy>
    </target>

  <target name="war" depends="copy-jars,jar" description="
Creates mondrian.war based upon jpivot.war.
Assumes that mondrian.jar exists (use 'jar' target)">
    <filter filtersfile="mondrian.properties"/>
    <mkdir dir="${lib.dir}" />
    <delete file="${war.file}"/>
    <copy file="${lib.dir}/jpivot.war" tofile="${war.file}"/>
    <delete file="${lib.dir}/web.xml"/>
    <copy file="${webapp.dir}/WEB-INF/web-jpivot.xml"
        filtering="true" tofile="${lib.dir}/web.xml"/>
    <!-- always replace jpivot's index.jsp -->
    <copy overwrite="yes" file="${webapp.dir}/index.jsp" tofile="${lib.dir}/index.jsp"/>

    <war warfile="${war.file}"
        update="yes"
        webxml="${lib.dir}/web.xml">
      <webinf dir="${webapp.dir}/WEB-INF" excludes="web.xml"/>
      <!-- our FoodMart.xml may be newer than jpivot's -->
      <webinf dir="${demo.dir}" prefix="WEB-INF/queries" includes="FoodMart.xml"/>
      <fileset dir="${webapp.dir}" excludes="WEB-INF/**/*"/>
      <fileset dir="${lib.dir}" includes="index.jsp"/>
      <lib dir="${lib.dir}" includes="${name}.jar"/>
    </war>
  </target>

  <target name="deploy-war" depends="war" description="Deploy WAR with JPivot to web server">
    <copy file="${war.file}" todir="${mondrian.webapp.deploy}"/>
  </target>
  	
  <target name="war-no-jpivot" description="
Creates mondrian.war.
Assumes that mondrian.jar exists (use 'jar' target),
and lib contains ant.jar, junit.jar etc. (use 'copy-jars' target)">
    <filter filtersfile="mondrian.properties"/>
    <mkdir dir="${lib.dir}" />
    <delete file="${war.file}"/>
    <delete file="${lib.dir}/web.xml"/>
    <copy file="${webapp.dir}/WEB-INF/web.xml"
        filtering="true" todir="${lib.dir}"/>
    <war warfile="${war.file}"
        webxml="${lib.dir}/web.xml">
      <webinf dir="${webapp.dir}/WEB-INF" excludes="web.xml"/>
      <webinf dir="${demo.dir}" includes="FoodMart.xml"/>
      <fileset dir="${webapp.dir}" excludes="WEB-INF/**/*"/>
      <lib dir="${lib.dir}" includes="
${name}.jar,
javacup.jar,
jmi.jar,
mof.jar,
xalan.jar"/>
    </war>
  </target>

  <target name="deploy-no-jpivot-war" depends="war-no-jpivot" description="Deploy standalone WAR to web server">
    <delete>
    	<fileset dir="${mondrian.webapp.deploy}" includes="${war.file}"/>
    </delete>
    <copy file="${war.file}" todir="${mondrian.webapp.deploy}"/>
  </target>

  <target name="workbench" depends="compile">
    <jar jarfile="${workbench.jar.file}" manifest="misc/workbench-manifest.mf">
      <fileset
          dir="${classes.dir}"
          includes="**/*.class"/>
      <fileset
          dir="."
          includes="images/*.*"/>
    </jar>

  </target>
</project>
