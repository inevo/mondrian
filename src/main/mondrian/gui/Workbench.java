/*
 * Workbench.java
 *
 * Created on September 26, 2002, 11:28 AM
 */

package mondrian.gui;

import mondrian.rolap.*;
import mondrian.olap.*;


import java.sql.SQLException;
import java.util.HashMap;
import java.util.Locale;
import java.util.Properties;
import java.util.ArrayList;
import java.io.PrintWriter;
import java.net.*;

import javax.swing.*;
import javax.swing.tree.*;

/**
 *
 * @author  sean
 */
public class Workbench extends javax.swing.JFrame {
    
    /** Creates new form Workbench */
    public Workbench() {
        initComponents();
        ImageIcon icon = new javax.swing.ImageIcon("images/cube16.gif");
        
        this.setIconImage(icon.getImage());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        viewMenu = new javax.swing.JMenu();
        viewDimensionsMenuItem = new javax.swing.JCheckBoxMenuItem();
        viewMeasuresMenuItem = new javax.swing.JCheckBoxMenuItem();
        viewCubesMenuItem = new javax.swing.JCheckBoxMenuItem();

        setTitle("Mondrian Workbench");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        getContentPane().add(desktopPane, java.awt.BorderLayout.CENTER);

        fileMenu.setText("File");
        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });

        fileMenu.add(openMenuItem);

        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setText("Save As ...");
        fileMenu.add(saveAsMenuItem);

        fileMenu.add(jSeparator1);

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });

        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setText("Edit");
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        viewMenu.setText("View");
        viewMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewMenuActionPerformed(evt);
            }
        });

        viewDimensionsMenuItem.setText("CheckBox");
        viewMenu.add(viewDimensionsMenuItem);

        viewMeasuresMenuItem.setText("CheckBox");
        viewMenu.add(viewMeasuresMenuItem);

        viewCubesMenuItem.setText("CheckBox");
        viewMenu.add(viewCubesMenuItem);

        menuBar.add(viewMenu);

        setJMenuBar(menuBar);

        pack();
    }//GEN-END:initComponents

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        JFileChooser jfc = new JFileChooser();
        Util.getProperties();
        if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            try {
                mondrian.xom.Parser xmlParser =
                        mondrian.xom.XOMUtil.createDefaultParser();
                MondrianDef.Schema schema = new MondrianDef.Schema(
                        xmlParser.parse(jfc.getSelectedFile().toURL()));

                JInternalFrame schemaFrame = new JInternalFrame();
                schemaFrame.setTitle("Schema - " + jfc.getSelectedFile().getName());

                schemaFrame.getContentPane().add(new SchemaExplorer(schema));

                schemaFrame.setBounds(0, 0, 500, 480);
                schemaFrame.setClosable(true);
                schemaFrame.setIconifiable(true);
                schemaFrame.setMaximizable(true);
                schemaFrame.setResizable(true);
                schemaFrame.setVisible(true);

                desktopPane.add(schemaFrame, javax.swing.JLayeredPane.DEFAULT_LAYER);
                schemaFrame.show();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_openMenuItemActionPerformed
        
    private void viewMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewMenuActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_viewMenuActionPerformed
    
    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        Workbench w = new Workbench();
        w.setSize(800, 600);
        w.show();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JCheckBoxMenuItem viewCubesMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenu viewMenu;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JCheckBoxMenuItem viewMeasuresMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JCheckBoxMenuItem viewDimensionsMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    // End of variables declaration//GEN-END:variables
    
}
